{
  "openapi": "3.0.3",
  "info": {
    "title": "Payroll",
    "version": "0.1.0"
  },
  "tags": [
    {
      "name": "Authentication"
    },
    {
      "name": "Password restoration"
    },
    {
      "name": "User management"
    },
    {
      "name": "Business unit management"
    },
    {
      "name": "Incomes and outcomes"
    }
  ],
  "components": {
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "example": {
          "username": "testuser",
          "password": "testpass"
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        }
      },
      "BusinessUnitInformationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          }
        }
      },
      "CreateBusinessUnitRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "EditBusinessUnitRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "BasicMessageResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "BadRequestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "second_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "second_last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "payment_period": {
            "type": "integer",
            "enum": [
              1,
              2
            ]
          },
          "business_unit": {
            "type": "integer",
            "enum": [
              1,
              2
            ]
          },
          "salary": {
            "type": "number"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email",
          "payment_period",
          "business_unit",
          "salary"
        ]
      },
      "UserInformationResponse": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "second_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "second_last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "payment_period": {
            "type": "string"
          },
          "business_unit": {
            "type": "string"
          },
          "on_leave": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "salary": {
            "type": "number"
          }
        }
      },
      "BasicUserInformationResponse": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "second_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "second_last_name": {
            "type": "string"
          },
          "payment_period": {
            "type": "string"
          },
          "business_unit": {
            "type": "string"
          },
          "on_leave": {
            "type": "boolean"
          },
          "salary": {
            "type": "number"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "second_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "second_last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "payment_period": {
            "type": "integer",
            "enum": [
              1,
              2
            ]
          },
          "business_unit": {
            "type": "integer",
            "enum": [
              1,
              2
            ]
          },
          "salary": {
            "type": "number"
          }
        },
        "required": [
          "id"
        ]
      },
      "PrivilegesInformationResponse": {
        "type": "object",
        "properties": {
          "CREATE_ADMIN": {
            "type": "string"
          },
          "CREATE_BUSINESS_UNITS": {
            "type": "string"
          },
          "EDIT_BUSINESS_UNITS": {
            "type": "string"
          },
          "DELETE_BUSINESS_UNITS": {
            "type": "string"
          },
          "EDIT_USERS": {
            "type": "string"
          },
          "DELETE_USERS": {
            "type": "string"
          },
          "CREATE_PAYROLL_RECEIPTS": {
            "type": "string"
          }
        }
      },
      "CreateRestoreRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "IncomeListItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "automatic": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "NewIncomeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "automatic": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "automatic"
        ]
      },
      "EditIncomeRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "automatic": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ]
      },
      "DeleteIncomeRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          }
        },
        "required": [
          "id"
        ]
      },
      "AssignIncomeRequest": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "number"
          },
          "income_id": {
            "type": "number"
          },
          "counter": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "automatic": {
            "type": "boolean"
          }
        },
        "required": [
          "user_id",
          "income_id",
          "counter",
          "amount",
          "automatic"
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "scheme": "Bearer",
        "type": "http"
      }
    }
  },
  "paths": {
    "/api/privileges": {
      "get": {
        "summary": "Gets all available privileges and their description.",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of privileges.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivilegesInformationResponse"
                },
                "example": {
                  "CREATE_ADMIN": {
                    "id": 1,
                    "description": "Crear administradores"
                  },
                  "CREATE_BUSINESS_UNITS": {
                    "id": 2,
                    "description": "Crear unidades de negocio"
                  },
                  "CREATE_USERS": {
                    "id": 3,
                    "description": "Crear usuarios"
                  },
                  "EDIT_USERS": {
                    "id": 4,
                    "description": "Editar usuarios"
                  },
                  "DELETE_USERS": {
                    "id": 5,
                    "description": "Borrar usuarios"
                  },
                  "CREATE_PAYROLL_RECEIPTS": {
                    "id": 7,
                    "description": "Generar recibos de n√≥mina"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Unable to send list of privileges.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicMessageResponse"
                },
                "example": {
                  "message": "Unable to send privileges."
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Checks credentials and returns session token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a session token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Username and/or password are incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                },
                "example": {
                  "message": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "/api/forgot": {
      "post": {
        "summary": "Sends password restoration email.",
        "tags": [
          "Password restoration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRestoreRequest"
              },
              "example": {
                "email": "john_doe@email.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns confirmation message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicUserInformationResponse"
                },
                "example": {
                  "message": "Email sent."
                }
              }
            }
          },
          "500": {
            "description": "Email could not be sent.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicUserInformationResponse"
                },
                "example": {
                  "message": "Unable to send email."
                }
              }
            }
          }
        }
      }
    },
    "/api/restore": {
      "post": {
        "summary": "Sends session token and new password.",
        "tags": [
          "Password restoration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": ""
              },
              "example": {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6InN1cGVyYWRtaW4iLCJpYXQiOjE2NTQ3MjkzNjYsImV4cCI6MTY1NDczMjk2NiwiYXVkIjoic2Vzc2lvbiJ9.YRnk0qtuPLdegg0KmY6SHubsMpY8rfAWTG0PASMUPEQ",
                "newPassword": "something_new"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns confirmation message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicUserInformationResponse"
                },
                "example": {
                  "message": "Password changed correctly."
                }
              }
            }
          },
          "403": {
            "description": "Invalid credentials. Returns denial message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicUserInformationResponse"
                },
                "example": {
                  "message": "Unable to change password. Invalid credentials."
                }
              }
            }
          },
          "500": {
            "description": "Internal error. Returns denial message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicUserInformationResponse"
                },
                "example": {
                  "message": "Unable to change password. Try again later..."
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get a list of users",
        "tags": [
          "User management"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "by",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "salary"
              ]
            }
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BasicUserInformationResponse"
                  }
                },
                "example": [
                  {
                    "first_name": "John",
                    "second_name": null,
                    "last_name": "Doe",
                    "second_last_name": null,
                    "payment_method": "Quincenal",
                    "business_unit": "Michelada",
                    "on_leave": false,
                    "salary": 5000.45
                  },
                  {
                    "first_name": "Jane",
                    "second_name": "Dill",
                    "last_name": "Don",
                    "second_last_name": "S",
                    "payment_method": "Mensual",
                    "business_unit": "Arkus Nexus",
                    "on_leave": false,
                    "salary": 150000
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Get the information of a specific user",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retuns requested user's information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationResponse"
                },
                "example": {
                  "first_name": "John",
                  "second_name": null,
                  "last_name": "Doe",
                  "second_last_name": null,
                  "email": "jdoe@example.net",
                  "role": "User",
                  "payment_period": "Quincenal",
                  "business_unit": "Michelada",
                  "on_leave": false,
                  "active": false,
                  "salary": 5000.45
                }
              }
            }
          },
          "400": {
            "description": "Missing required parameters"
          },
          "403": {
            "description": "User is missing the \"Read User Information\" privilege"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "User management"
        ],
        "summary": "Add a user to the payroll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {
                "first_name": "John",
                "last_name": "Doe",
                "email": "jdoe@example.net",
                "payment_period": 1,
                "business_unit": 1,
                "salary": 5000.45
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User was created successfully"
          },
          "400": {
            "description": "Missing required field"
          },
          "403": {
            "description": "User is missing the \"Create User\" privilege"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User management"
        ],
        "summary": "Edit a user information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {
                "id": 1,
                "salary": 10000.85,
                "payment_period": 2
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User information was edited successfully"
          },
          "400": {
            "description": "Missing required files"
          },
          "403": {
            "description": "User is missing the \"Edit User Information\" privilege"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User management"
        ],
        "summary": "Mark a user as inactive",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User was marked as inactive successfully"
          },
          "400": {
            "description": "Missing required files"
          },
          "403": {
            "description": "User is missing the \"Delete User\" privilege"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/businessunits/list": {
      "get": {
        "summary": "Get a list of business units",
        "tags": [
          "Business unit management"
        ],
        "responses": {
          "200": {
            "description": "Gets all business units",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessUnitInformationResponse"
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "name": "Farmville",
                    "createdAt": "2022-06-08T00:10:05.944Z",
                    "updatedAt": "2022-06-08T00:23:49.739Z",
                    "deletedAt": null
                  },
                  {
                    "id": 2,
                    "name": "Springfield",
                    "createdAt": "2022-06-08T00:10:05.944Z",
                    "updatedAt": "2022-06-08T00:23:49.739Z",
                    "deletedAt": null
                  }
                ]
              }
            }
          },
          "404": {
            "description": "No business units found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBusinessUnitRequest"
                },
                "example": {
                  "message": "No business units found."
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/businessunits/list/id": {
      "get": {
        "summary": "Get a specific business unit",
        "tags": [
          "Business unit management"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a requested business unit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                },
                "example": {
                  "id": 1,
                  "name": "Farmville",
                  "createdAt": "2022-06-08T00:10:05.944Z",
                  "updatedAt": "2022-06-08T00:23:49.739Z",
                  "deletedAt": null
                }
              }
            }
          },
          "404": {
            "description": "No business units found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "message": "No business units found."
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/businessunits/save": {
      "post": {
        "tags": [
          "Business unit management"
        ],
        "summary": "Adds a new business unit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBusinessUnitRequest"
              },
              "example": {
                "name": "Springfield"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Business unit is created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicMessageResponse"
                },
                "example": {
                  "message": "Business unit 'Springfield' was created successfully."
                }
              }
            }
          },
          "409": {
            "description": "Business unit already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicMessageResponse"
                },
                "example": {
                  "message": "Business unit 'Springfield' already exists."
                }
              }
            }
          },
          "503": {
            "description": "Business unit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicMessageResponse"
                },
                "example": {
                  "name": "Something went wrong. Unable to create business unit 'Springfield'."
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/businessunits/edit/id": {
      "put": {
        "tags": [
          "Business unit management"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Edit a user information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBusinessUnitRequest"
              },
              "example": {
                "newName": "South Park"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates business unit name.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicMessageResponse"
                },
                "example": {
                  "message": "Successs. Updated 'Farmville' business unit name to 'South Park'."
                }
              }
            }
          },
          "404": {
            "description": "Unable to find business unit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicMessageResponse"
                },
                "example": {
                  "message": "No business unit found."
                }
              }
            }
          },
          "503": {
            "description": "Unable to change business unit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicMessageResponse"
                },
                "example": {
                  "message": "Something went wrong. Unable to cast changes."
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/businessunits/delete": {
      "delete": {
        "tags": [
          "Business unit management"
        ],
        "summary": "Mark a user as inactive",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Business unit was marked as inactive successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicMessageResponse"
                },
                "example": {
                  "message": "Business unit was deleted successfully."
                }
              }
            }
          },
          "404": {
            "description": "No business unit found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicMessageResponse"
                },
                "example": {
                  "message": "Business unit was deleted successfully."
                }
              }
            }
          },
          "503": {
            "description": "Unable to delete business unit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicMessageResponse"
                },
                "example": {
                  "message": "Business unit was deleted successfully."
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/incomes": {
      "get": {
        "tags": [
          "Incomes and outcomes"
        ],
        "summary": "Get all incomes available",
        "responses": {
          "200": {
            "description": "Returns a list with the information of all incomes available",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncomeListItemResponse"
                  },
                  "example": [
                    {
                      "id": 1,
                      "name": "Example income",
                      "automatic": false,
                      "active": true
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incomes and outcomes"
        ],
        "summary": "Creates a new income",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewIncomeRequest"
              },
              "example": {
                "name": "New income",
                "automatic": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "An income was created"
          },
          "400": {
            "description": "You sent invalid data or missing required properties"
          }
        }
      },
      "put": {
        "tags": [
          "Incomes and outcomes"
        ],
        "summary": "Change properties of an existing income",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditIncomeRequest"
              },
              "examples": {
                "Edit name and automatic": {
                  "value": {
                    "id": 1,
                    "name": "Updated income",
                    "automatic": true
                  }
                },
                "Edit active only": {
                  "value": {
                    "id": 1,
                    "active": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The specified income was edited"
          },
          "400": {
            "description": "You sent invalid data or missing required properties"
          }
        }
      },
      "delete": {
        "tags": [
          "Incomes and outcomes"
        ],
        "summary": "Delete an income",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteIncomeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The specified income was edited"
          },
          "400": {
            "description": "You sent invalid data or missing required properties"
          }
        }
      }
    },
    "/api/incomes/assign": {
      "post": {
        "tags": [
          "Incomes and outcomes"
        ],
        "summary": "Assign an income to a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignIncomeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The specified income was edited"
          },
          "400": {
            "description": "You sent invalid data or missing required properties"
          }
        }
      }
    },
    "/api/outcomes": {
      "get": {
        "tags": [
          "Incomes and outcomes"
        ],
        "summary": "Get all outcomes available",
        "responses": {
          "200": {
            "description": "Returns a list with the information of all outcomes available",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncomeListItemResponse"
                  },
                  "example": [
                    {
                      "id": 1,
                      "name": "Example outcome",
                      "automatic": false,
                      "active": true
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incomes and outcomes"
        ],
        "summary": "Creates a new outcome",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewIncomeRequest"
              },
              "example": {
                "name": "New outcome",
                "automatic": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "An outcome was created"
          },
          "400": {
            "description": "You sent invalid data or missing required properties"
          }
        }
      },
      "put": {
        "tags": [
          "Incomes and outcomes"
        ],
        "summary": "Change properties of an existing outcome",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditIncomeRequest"
              },
              "examples": {
                "Edit name and automatic": {
                  "value": {
                    "id": 1,
                    "name": "Updated outcome",
                    "automatic": true
                  }
                },
                "Edit active only": {
                  "value": {
                    "id": 1,
                    "active": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The specified outcome was edited"
          },
          "400": {
            "description": "You sent invalid data or missing required properties"
          }
        }
      },
      "delete": {
        "tags": [
          "Incomes and outcomes"
        ],
        "summary": "Delete an outcome",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteIncomeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The specified outcome was edited"
          },
          "400": {
            "description": "You sent invalid data or missing required properties"
          }
        }
      }
    },
    "/api/outcomes/assign": {
      "post": {
        "tags": [
          "Incomes and outcomes"
        ],
        "summary": "Assign an outcome to a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignIncomeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The specified outcome was edited"
          },
          "400": {
            "description": "You sent invalid data or missing required properties"
          }
        }
      }
    }
  }
}